Se puede sobreescribir un modificador de acceso, pero solo se puede hacerlo menos reestrictivo

 Gerarquia de re-estrictivo
    - PUBLIC        public String x;            menos rees.
    - PROTECTED     protected String x;
    - DEFAULT       String x;
    - PRIVATE       private String x;           mas rees.

Ejemplo 1                               Ejemplo 2

class Padre{                            class Padre{
    public void m1(){}                      void m1(){}     // Defaul
}                                       }
---Correct---                           ---Correct---
class Hijo extends Padre{               class Hijo extends Padre{
    public void m1(){}                       public void m1(){}
}                                       }
---Incorrect---                         ---Correct---
class Hijo extends Padre{               class Hijo extends Padre{
    protecter void m1(){}                   protecter void m1(){}
}                                       }
---Incorrect---                         ---Correct---
class Hijo extends Padre{               class Hijo extends Padre{
    private void m1(){}                     void m1(){}
}                                       }
                                        ---Incorrect---
                                        class Hijo extends Padre{
                                            private void m1(){}
                                        }

// Interfaces
class Test{
    void m1(){} // Default
}
interface Lavable(){
    public void m1()
}
interface COnvertible(){
    void m1(); // Es public no Defaul (Solo en interfaces)
}
// OJO: Si no coloco nada en una clase es un "Default", pero en una interface es un "Public"
// EN interfaces no se puede colocar private o protected



